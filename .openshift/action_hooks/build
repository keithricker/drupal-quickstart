#!/bin/bash
# This is a simple build script and will be executed on your CI system if
# available.  Otherwise it will execute while your application is stopped
# before the deploy step.  This script gets executed directly, so it
# could be python, php, ruby, etc.

set -e

#
# The PHP dir most be controlled by Drupal content
#
if [ -e "${OPENSHIFT_REPO_DIR}php" -a ! -h "${OPENSHIFT_REPO_DIR}php" ]
then
  echo "ERROR: The 'php' directory in your Git repo prevents Drupal from being installed.  Please remove 'php' and push again."
  exit 5
fi

DRUSH=${OPENSHIFT_REPO_DIR}vendor/bin/drush
DRUPAL_DIR=${OPENSHIFT_DATA_DIR}drupal
DRUPAL_SITE_DIR=${OPENSHIFT_DATA_DIR}sites

echo

# Drush settings
cat >$OPENSHIFT_HOMEDIR/.drush/drushrc.php <<EOF
<?php
  \$options['uri'] = \$_ENV['OPENSHIFT_APP_DNS'];
  \$options['root'] = \$_ENV['OPENSHIFT_REPO_DIR'].'php';
EOF

# Link the /current symlink to the latest Drupal instance
#
rm -f ${OPENSHIFT_DATA_DIR}downloads/current
export DRUPAL_INSTALL_DIR="${OPENSHIFT_REPO_DIR}"
mkdir -p ${OPENSHIFT_DATA_DIR}downloads
ln -s ${OPENSHIFT_REPO_DIR} ${OPENSHIFT_DATA_DIR}downloads/current

#
# Ensure there is a default health check
#
cp ${OPENSHIFT_REPO_DIR}.openshift/health_check.php ${DRUPAL_INSTALL_DIR}

patch ${DRUPAL_INSTALL_DIR}/.htaccess < ${OPENSHIFT_REPO_DIR}.openshift/.htaccess.patch

echo "Drupal installed to $DRUPAL_INSTALL_DIR"
echo

#
# Link the /sites directory (where Drupal stores modules and files)
# into the install dir in order to keep it easily accessible.
#/
if [ ! -d "$DRUPAL_SITE_DIR" ]
then
  ln -s $DRUPAL_INSTALL_DIR/sites $DRUPAL_SITE_DIR
fi

#
# Ensure that the app-root/runtime/repo/php PHP directory points
# to a valid Drupal instance directory
#
ln -s ${OPENSHIFT_REPO_DIR} ${OPENSHIFT_REPO_DIR}php
if [ ! -d "${OPENSHIFT_REPO_DIR}php" ]
then
  echo "ERROR: Unable to link the PHP directory, as the current Drupal instance is not a valid directory."
  exit 8
fi
